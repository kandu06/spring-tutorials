server.port=8080

#enables the h2 database to be accessed in the browser and the context root of the h2 url.
spring.h2.console.enabled=true
spring.h2.console.path=/h2

#datasource properties setup. Env specific properties go in env specific appication.properties.
spring.datasource.url=jdbc:h2:file:~/dasboot
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

#datasource pooling properties. NOTE: by default spring-boot uses tomcat-jdbc, but it will work with dbcp as well.
spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.max-idle=8
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.min-evictable-idle-time-millis=1000
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.time-between-eviction-runs-millis=1

#flyway db will create the tables defined in db/migration/*.sql file.
flyway.baseline-on-migrate=true

#disable hibernate from auto creating tables based on our model. hibernate is automatically included with spring-boot-data-jpa.
spring.jpa.hibernate.ddl-auto=false

#flyway datasource, can be used when primary db is not available, for demo purposes.
#NOTE: the properties are unknown to spring, these will be used in java based configuration file PersistenceConfiguration.
#The java configuration file will match the prefis and get properties and create appropriate datasource.
flyway.url=jdbc:h2:file:~/dasboot
flyway.username=sa
flyway.password=
flyway.driver-class-name=org.h2.Driver